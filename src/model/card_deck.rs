use super::subtypes;
use super::supertypes;
use super::types;

struct CardDeck {
    availability: Vec<Availablity>,
    borderColor: BorderColor,
    colorIdentity: Colors,
    colors: Colors,
    convertedManaCost: f32,
    count: i32,
    //foreignData: [],
    frameEffects: Vec<FrameEffect>,
    frameVersion: FrameVersion,
    hasFoil: bool,
    hasNonFoil: bool,
    //identifiers: [],
    isFoil: bool,
    layout: Layout,
    //legalities: [],
    name: String,
    number: String,
    //otherFaceIds: [],
    //purchaseUrls: [],
    rarity: Rarity,
    //rulings: [],
    setCode: SetCode,
    subtypes: Vec<SubTypes>,
    supertypes: Vec<SuperTypes>,
    types: Vec<Types>,
    uuid: Uuid::v5,
    variations: Vec<Uuid::v5>,
    artist: Option<String>,
    asciiName: Option<String>,
    colorIndicator: Option<Vec<Colors>>,
    duelDeck: Option<DualDeck>,
    edhrecRank: Option<i32>,
    faceConvertedManaCost: Option<f32>,
    faceName: Option<String>,
    flavorName: Option<String>,
    flavorText: Option<String>,
    hand: Option<i32>,
    hasContentWarning: Option<bool>,
    hasAlternativeDeckLimit: Option<bool>,
    isAlternative: Option<bool>,
    isFullArt: Option<bool>,
    isOnlineOnly: Option<bool>,
    isOversized: Option<bool>,
    isPromo: Option<bool>,
    isReprint: Option<bool>,
    isReserved: Option<bool>,
    isStarter: Option<bool>,
    isStorySpotlight: Option<bool>,
    isTextless: Option<bool>,
    isTimeshifted: Option<bool>,
    keywords: Option<Vec<Keywords>>,
    //leadershipSkills: Option<[]>,
    life: Option<i32>,
    loyalty: Option<i32>,
    manaCost: Option<String>,
    //originalReleaseDate: Option<[]>,
    originalText: Option<String>,
    originalType: Option<String>,
    power: Option<i32>,
    printings: Option<Vec<SetCodes>>,
    promoTypes: Option<Vec<PromoTypes>>,
    side: Option<String>,
    text: Option<String>,
    toughness: Option<i32>,
    watermark: Option<Vec<Watermarks>>,
}
